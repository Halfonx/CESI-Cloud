name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependecies
      run: npm install

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: halfonx/filewriter:latest
    
    - name: Send Discord build notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "content": "Nouvelle image Docker construite : `halfonx/filewriter:latest`"
        }' $DISCORD_WEBHOOK

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.18.2'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

    - name: Update Kubernetes deployment
      run: |
        kubectl set image deployment/filewriter filewriter=halfonx/filewriter:latest

    -name: Send Discord deploy notification
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    run: |
      curl -X POST -H "Content-Type: application/json" -d '{
          "content": "Nouvelle image Docker pouss√©e : `halfonx/filewriter:latest`"
      }' $DISCORD_WEBHOOK