name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependecies
      run: npm install

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry (GHCR)
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u halfonx --password-stdin

    - name: Build and tag Docker image
      run: |
          docker build --build-arg MYSQL_ADDON_URI=${{ secrets.MYSQL_ADDON_URI }} --build-arg S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}  --build-arg S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }} --build-arg S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}  -t ghcr.io/halfonx/filewriter:${{ github.sha }} .

    - name: Push Docker image to GHCR
      run: |
          docker push ghcr.io/halfonx/filewriter:${{ github.sha }}
    
    - name: Send Discord build notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "content": "Nouvelle image Docker construite et poussée : `halfonx/filewriter:${{ github.sha }}`"
        }' $DISCORD_WEBHOOK

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.18.2'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

    - name: Update Kubernetes deployment
      run: |
        kubectl set image deployment/filewriter filewriter=halfonx/filewriter:latest

    - name: Send Discord deploy notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "content": "Nouvelle image Docker poussée : `halfonx/filewriter:${{ github.sha }}`"
        }' $DISCORD_WEBHOOK